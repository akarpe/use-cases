package com.sun.mdm.index.webservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.0.redhat-610379
 * 2015-09-21T11:16:26.685-04:00
 * Generated source version: 2.7.0.redhat-610379
 * 
 */
@WebService(targetNamespace = "http://webservice.index.mdm.sun.com/", name = "PersonEJB")
@XmlSeeAlso({ObjectFactory.class})
public interface PersonEJB {

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/checkForOverlayRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/checkForOverlayResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/checkForOverlay/Fault/ProcessingException")})
    @RequestWrapper(localName = "checkForOverlay", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.CheckForOverlay")
    @WebMethod
    @ResponseWrapper(localName = "checkForOverlayResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.CheckForOverlayResponse")
    public com.sun.mdm.index.webservice.OverlayDetectorResult checkForOverlay(
        @WebParam(name = "beforeObj", targetNamespace = "")
        com.sun.mdm.index.webservice.PersonBean beforeObj,
        @WebParam(name = "afterObj", targetNamespace = "")
        com.sun.mdm.index.webservice.PersonBean afterObj
    ) throws ProcessingException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/unmergeSystemRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/unmergeSystemRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/unmergeSystemRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/unmergeSystemRecord/Fault/UserException")})
    @RequestWrapper(localName = "unmergeSystemRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UnmergeSystemRecord")
    @WebMethod
    @ResponseWrapper(localName = "unmergeSystemRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UnmergeSystemRecordResponse")
    public com.sun.mdm.index.webservice.MergePersonResult unmergeSystemRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "sourceLID", targetNamespace = "")
        java.lang.String sourceLID,
        @WebParam(name = "destLID", targetNamespace = "")
        java.lang.String destLID,
        @WebParam(name = "calculateOnly", targetNamespace = "")
        boolean calculateOnly
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/lookupApplicationConfigRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/lookupApplicationConfigResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupApplicationConfig/Fault/ProcessingException")})
    @RequestWrapper(localName = "lookupApplicationConfig", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupApplicationConfig")
    @WebMethod
    @ResponseWrapper(localName = "lookupApplicationConfigResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupApplicationConfigResponse")
    public java.util.List<com.sun.mdm.index.webservice.ApplicationConfigEntry> lookupApplicationConfig() throws ProcessingException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/lookupPotentialDuplicatesRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/lookupPotentialDuplicatesResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupPotentialDuplicates/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupPotentialDuplicates/Fault/UserException"), @FaultAction(className = PageException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupPotentialDuplicates/Fault/PageException")})
    @RequestWrapper(localName = "lookupPotentialDuplicates", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupPotentialDuplicates")
    @WebMethod
    @ResponseWrapper(localName = "lookupPotentialDuplicatesResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupPotentialDuplicatesResponse")
    public java.util.List<com.sun.mdm.index.webservice.PotentialDuplicateResult> lookupPotentialDuplicates(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "PotentialDuplicateSearchObjectBean", targetNamespace = "")
        com.sun.mdm.index.webservice.PotentialDuplicateSearchObjectBean potentialDuplicateSearchObjectBean
    ) throws ProcessingException_Exception, UserException_Exception, PageException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/assignRefObjectNodesRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/assignRefObjectNodesResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/assignRefObjectNodes/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/assignRefObjectNodes/Fault/UserException")})
    @RequestWrapper(localName = "assignRefObjectNodes", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.AssignRefObjectNodes")
    @WebMethod
    @ResponseWrapper(localName = "assignRefObjectNodesResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.AssignRefObjectNodesResponse")
    public void assignRefObjectNodes(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid,
        @WebParam(name = "objectType", targetNamespace = "")
        java.lang.String objectType,
        @WebParam(name = "referIds", targetNamespace = "")
        java.util.List<java.lang.String> referIds
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemRecordUIDsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemRecordUIDsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemRecordUIDs/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemRecordUIDs/Fault/UserException")})
    @RequestWrapper(localName = "lookupSystemRecordUIDs", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupSystemRecordUIDs")
    @WebMethod
    @ResponseWrapper(localName = "lookupSystemRecordUIDsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupSystemRecordUIDsResponse")
    public java.util.List<com.sun.mdm.index.webservice.SystemObjectUIDBean> lookupSystemRecordUIDs(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "lid", targetNamespace = "")
        java.lang.String lid
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/deactivateEnterpriseRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/deactivateEnterpriseRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/deactivateEnterpriseRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/deactivateEnterpriseRecord/Fault/UserException")})
    @RequestWrapper(localName = "deactivateEnterpriseRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.DeactivateEnterpriseRecord")
    @WebMethod
    @ResponseWrapper(localName = "deactivateEnterpriseRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.DeactivateEnterpriseRecordResponse")
    public void deactivateEnterpriseRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/searchRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/searchResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/search/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/search/Fault/UserException")})
    @RequestWrapper(localName = "search", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.Search")
    @WebMethod
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.SearchResponse")
    public java.util.List<com.sun.mdm.index.webservice.ScoreElement> search(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "objBean", targetNamespace = "")
        com.sun.mdm.index.webservice.PersonBean objBean,
        @WebParam(name = "searchOptions", targetNamespace = "")
        com.sun.mdm.index.webservice.EoSearchOptions searchOptions
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordStatusRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordStatusResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordStatus/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordStatus/Fault/UserException")})
    @RequestWrapper(localName = "getEnterpriseRecordStatus", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEnterpriseRecordStatus")
    @WebMethod
    @ResponseWrapper(localName = "getEnterpriseRecordStatusResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEnterpriseRecordStatusResponse")
    public java.lang.String getEnterpriseRecordStatus(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/activateSystemRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/activateSystemRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/activateSystemRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/activateSystemRecord/Fault/UserException")})
    @RequestWrapper(localName = "activateSystemRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ActivateSystemRecord")
    @WebMethod
    @ResponseWrapper(localName = "activateSystemRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ActivateSystemRecordResponse")
    public void activateSystemRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/resolvePotentialDuplicateRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/resolvePotentialDuplicateResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/resolvePotentialDuplicate/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/resolvePotentialDuplicate/Fault/UserException")})
    @RequestWrapper(localName = "resolvePotentialDuplicate", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ResolvePotentialDuplicate")
    @WebMethod
    @ResponseWrapper(localName = "resolvePotentialDuplicateResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ResolvePotentialDuplicateResponse")
    public void resolvePotentialDuplicate(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "potentialDuplicateId", targetNamespace = "")
        java.lang.String potentialDuplicateId,
        @WebParam(name = "permanentResolve", targetNamespace = "")
        boolean permanentResolve
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getEUIDsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getEUIDsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEUIDs/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEUIDs/Fault/UserException")})
    @RequestWrapper(localName = "getEUIDs", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEUIDs")
    @WebMethod
    @ResponseWrapper(localName = "getEUIDsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEUIDsResponse")
    public java.util.List<java.lang.String> getEUIDs(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid,
        @WebParam(name = "maxRecs", targetNamespace = "")
        int maxRecs
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getCodeDescriptionRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getCodeDescriptionResponse", fault = {@FaultAction(className = CodeLookupException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getCodeDescription/Fault/CodeLookupException")})
    @RequestWrapper(localName = "getCodeDescription", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetCodeDescription")
    @WebMethod
    @ResponseWrapper(localName = "getCodeDescriptionResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetCodeDescriptionResponse")
    public java.lang.String getCodeDescription(
        @WebParam(name = "type", targetNamespace = "")
        java.lang.String type,
        @WebParam(name = "code", targetNamespace = "")
        java.lang.String code
    ) throws CodeLookupException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/updateEnterpriseRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/updateEnterpriseRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/updateEnterpriseRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/updateEnterpriseRecord/Fault/UserException")})
    @RequestWrapper(localName = "updateEnterpriseRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UpdateEnterpriseRecord")
    @WebMethod
    @ResponseWrapper(localName = "updateEnterpriseRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UpdateEnterpriseRecordResponse")
    public void updateEnterpriseRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "eoBean", targetNamespace = "")
        com.sun.mdm.index.webservice.EnterprisePerson eoBean
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemDefinitionsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemDefinitionsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemDefinitions/Fault/ProcessingException")})
    @RequestWrapper(localName = "lookupSystemDefinitions", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupSystemDefinitions")
    @WebMethod
    @ResponseWrapper(localName = "lookupSystemDefinitionsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupSystemDefinitionsResponse")
    public java.util.List<com.sun.mdm.index.webservice.SystemDefinition> lookupSystemDefinitions() throws ProcessingException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/undoSystemObjectUpdateRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/undoSystemObjectUpdateResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/undoSystemObjectUpdate/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/undoSystemObjectUpdate/Fault/UserException")})
    @RequestWrapper(localName = "undoSystemObjectUpdate", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UndoSystemObjectUpdate")
    @WebMethod
    @ResponseWrapper(localName = "undoSystemObjectUpdateResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UndoSystemObjectUpdateResponse")
    public void undoSystemObjectUpdate(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "lid", targetNamespace = "")
        java.lang.String lid,
        @WebParam(name = "transNum", targetNamespace = "")
        java.lang.String transNum
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/addOrUpdateSystemRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/addOrUpdateSystemRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/addOrUpdateSystemRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/addOrUpdateSystemRecord/Fault/UserException")})
    @RequestWrapper(localName = "addOrUpdateSystemRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.AddOrUpdateSystemRecord")
    @WebMethod
    @ResponseWrapper(localName = "addOrUpdateSystemRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.AddOrUpdateSystemRecordResponse")
    public void addOrUpdateSystemRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid,
        @WebParam(name = "sysObjBean", targetNamespace = "")
        com.sun.mdm.index.webservice.SystemPerson sysObjBean,
        @WebParam(name = "checkDups", targetNamespace = "")
        boolean checkDups
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/executeMatchUpdateRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/executeMatchUpdateResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/executeMatchUpdate/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/executeMatchUpdate/Fault/UserException")})
    @RequestWrapper(localName = "executeMatchUpdate", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ExecuteMatchUpdate")
    @WebMethod
    @ResponseWrapper(localName = "executeMatchUpdateResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ExecuteMatchUpdateResponse")
    public com.sun.mdm.index.webservice.MatchColResult executeMatchUpdate(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "sysObjBean", targetNamespace = "")
        com.sun.mdm.index.webservice.SystemPerson sysObjBean
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getCodesByTypeRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getCodesByTypeResponse", fault = {@FaultAction(className = CodeLookupException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getCodesByType/Fault/CodeLookupException")})
    @RequestWrapper(localName = "getCodesByType", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetCodesByType")
    @WebMethod
    @ResponseWrapper(localName = "getCodesByTypeResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetCodesByTypeResponse")
    public java.util.List<com.sun.mdm.index.webservice.CodeDescription> getCodesByType(
        @WebParam(name = "type", targetNamespace = "")
        java.lang.String type
    ) throws CodeLookupException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getSBRRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getSBRResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSBR/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSBR/Fault/UserException")})
    @RequestWrapper(localName = "getSBR", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSBR")
    @WebMethod
    @ResponseWrapper(localName = "getSBRResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSBRResponse")
    public com.sun.mdm.index.webservice.SbrPerson getSBR(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordsByEUIDStatusRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordsByEUIDStatusResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordsByEUIDStatus/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordsByEUIDStatus/Fault/UserException")})
    @RequestWrapper(localName = "getSystemRecordsByEUIDStatus", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSystemRecordsByEUIDStatus")
    @WebMethod
    @ResponseWrapper(localName = "getSystemRecordsByEUIDStatusResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSystemRecordsByEUIDStatusResponse")
    public java.util.List<com.sun.mdm.index.webservice.SystemPerson> getSystemRecordsByEUIDStatus(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid,
        @WebParam(name = "status", targetNamespace = "")
        java.lang.String status
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getMultipleLIDsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getMultipleLIDsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getMultipleLIDs/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getMultipleLIDs/Fault/UserException")})
    @RequestWrapper(localName = "getMultipleLIDs", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetMultipleLIDs")
    @WebMethod
    @ResponseWrapper(localName = "getMultipleLIDsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetMultipleLIDsResponse")
    public java.util.List<com.sun.mdm.index.webservice.SystemPersonPKArray> getMultipleLIDs(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euids", targetNamespace = "")
        java.util.List<java.lang.String> euids,
        @WebParam(name = "returnEuidsAsLids", targetNamespace = "")
        boolean returnEuidsAsLids
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/mergeMultipleEnterpriseRecordsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/mergeMultipleEnterpriseRecordsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeMultipleEnterpriseRecords/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeMultipleEnterpriseRecords/Fault/UserException")})
    @RequestWrapper(localName = "mergeMultipleEnterpriseRecords", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeMultipleEnterpriseRecords")
    @WebMethod
    @ResponseWrapper(localName = "mergeMultipleEnterpriseRecordsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeMultipleEnterpriseRecordsResponse")
    public java.util.List<com.sun.mdm.index.webservice.MergePersonResult> mergeMultipleEnterpriseRecords(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "sourceEUIDs", targetNamespace = "")
        java.util.List<java.lang.String> sourceEUIDs,
        @WebParam(name = "destinationEO", targetNamespace = "")
        com.sun.mdm.index.webservice.EnterprisePerson destinationEO,
        @WebParam(name = "srcRevisionNumbers", targetNamespace = "")
        java.util.List<java.lang.String> srcRevisionNumbers,
        @WebParam(name = "destRevisionNumber", targetNamespace = "")
        java.lang.String destRevisionNumber,
        @WebParam(name = "calculateOnly", targetNamespace = "")
        boolean calculateOnly,
        @WebParam(name = "setSourceSystemStatusToMerged", targetNamespace = "")
        boolean setSourceSystemStatusToMerged
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemDefinitionRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemDefinitionResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemDefinition/Fault/ProcessingException")})
    @RequestWrapper(localName = "lookupSystemDefinition", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupSystemDefinition")
    @WebMethod
    @ResponseWrapper(localName = "lookupSystemDefinitionResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupSystemDefinitionResponse")
    public com.sun.mdm.index.webservice.SystemDefinition lookupSystemDefinition(
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode
    ) throws ProcessingException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecordWithImageRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecordWithImageResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecordWithImage/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecordWithImage/Fault/UserException")})
    @RequestWrapper(localName = "mergeEnterpriseRecordWithImage", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeEnterpriseRecordWithImage")
    @WebMethod
    @ResponseWrapper(localName = "mergeEnterpriseRecordWithImageResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeEnterpriseRecordWithImageResponse")
    public com.sun.mdm.index.webservice.MergePersonResult mergeEnterpriseRecordWithImage(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "fromEUID", targetNamespace = "")
        java.lang.String fromEUID,
        @WebParam(name = "destinationEO", targetNamespace = "")
        com.sun.mdm.index.webservice.EnterprisePerson destinationEO,
        @WebParam(name = "calculateOnly", targetNamespace = "")
        boolean calculateOnly,
        @WebParam(name = "setSourceSystemStatusToMerged", targetNamespace = "")
        boolean setSourceSystemStatusToMerged
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordByEUIDRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordByEUIDResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordByEUID/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordByEUID/Fault/UserException")})
    @RequestWrapper(localName = "getEnterpriseRecordByEUID", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEnterpriseRecordByEUID")
    @WebMethod
    @ResponseWrapper(localName = "getEnterpriseRecordByEUIDResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEnterpriseRecordByEUIDResponse")
    public com.sun.mdm.index.webservice.EnterprisePerson getEnterpriseRecordByEUID(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid,
        @WebParam(name = "allowMergedEuid", targetNamespace = "")
        boolean allowMergedEuid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/compareRecordsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/compareRecordsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/compareRecords/Fault/ProcessingException")})
    @RequestWrapper(localName = "compareRecords", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.CompareRecords")
    @WebMethod
    @ResponseWrapper(localName = "compareRecordsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.CompareRecordsResponse")
    public com.sun.mdm.index.webservice.MatchWeight compareRecords(
        @WebParam(name = "record1", targetNamespace = "")
        com.sun.mdm.index.webservice.PersonBean record1,
        @WebParam(name = "record2", targetNamespace = "")
        com.sun.mdm.index.webservice.PersonBean record2
    ) throws ProcessingException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/unmergeEnterpriseRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/unmergeEnterpriseRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/unmergeEnterpriseRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/unmergeEnterpriseRecord/Fault/UserException")})
    @RequestWrapper(localName = "unmergeEnterpriseRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UnmergeEnterpriseRecord")
    @WebMethod
    @ResponseWrapper(localName = "unmergeEnterpriseRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UnmergeEnterpriseRecordResponse")
    public com.sun.mdm.index.webservice.MergePersonResult unmergeEnterpriseRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid,
        @WebParam(name = "calculateOnly", targetNamespace = "")
        boolean calculateOnly
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecord/Fault/UserException")})
    @RequestWrapper(localName = "mergeEnterpriseRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeEnterpriseRecord")
    @WebMethod
    @ResponseWrapper(localName = "mergeEnterpriseRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeEnterpriseRecordResponse")
    public com.sun.mdm.index.webservice.MergePersonResult mergeEnterpriseRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "fromEUID", targetNamespace = "")
        java.lang.String fromEUID,
        @WebParam(name = "toEUID", targetNamespace = "")
        java.lang.String toEUID,
        @WebParam(name = "calculateOnly", targetNamespace = "")
        boolean calculateOnly,
        @WebParam(name = "setSourceSystemStatusToMerged", targetNamespace = "")
        boolean setSourceSystemStatusToMerged
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getSBRsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getSBRsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSBRs/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSBRs/Fault/UserException")})
    @RequestWrapper(localName = "getSBRs", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSBRs")
    @WebMethod
    @ResponseWrapper(localName = "getSBRsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSBRsResponse")
    public java.util.List<com.sun.mdm.index.webservice.EnterprisePerson> getSBRs(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euids", targetNamespace = "")
        java.util.List<java.lang.String> euids,
        @WebParam(name = "allowMergedEuid", targetNamespace = "")
        boolean allowMergedEuid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getSBRHistoryRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getSBRHistoryResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSBRHistory/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSBRHistory/Fault/UserException")})
    @RequestWrapper(localName = "getSBRHistory", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSBRHistory")
    @WebMethod
    @ResponseWrapper(localName = "getSBRHistoryResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSBRHistoryResponse")
    public com.sun.mdm.index.webservice.SbrPersonHistory getSBRHistory(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid,
        @WebParam(name = "transnum", targetNamespace = "")
        java.lang.String transnum
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/executeCustomLogicRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/executeCustomLogicResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/executeCustomLogic/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/executeCustomLogic/Fault/UserException")})
    @RequestWrapper(localName = "executeCustomLogic", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ExecuteCustomLogic")
    @WebMethod
    @ResponseWrapper(localName = "executeCustomLogicResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ExecuteCustomLogicResponse")
    public com.sun.mdm.index.webservice.CustomLogicResponse executeCustomLogic(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "script", targetNamespace = "")
        java.lang.String script,
        @WebParam(name = "parameters", targetNamespace = "")
        java.util.List<com.sun.mdm.index.webservice.CustomLogicParameter> parameters
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/executeMatchRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/executeMatchResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/executeMatch/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/executeMatch/Fault/UserException")})
    @RequestWrapper(localName = "executeMatch", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ExecuteMatch")
    @WebMethod
    @ResponseWrapper(localName = "executeMatchResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ExecuteMatchResponse")
    public com.sun.mdm.index.webservice.MatchColResult executeMatch(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "sysObjBean", targetNamespace = "")
        com.sun.mdm.index.webservice.SystemPerson sysObjBean
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/addSystemRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/addSystemRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/addSystemRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/addSystemRecord/Fault/UserException")})
    @RequestWrapper(localName = "addSystemRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.AddSystemRecord")
    @WebMethod
    @ResponseWrapper(localName = "addSystemRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.AddSystemRecordResponse")
    public void addSystemRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid,
        @WebParam(name = "sysObjBean", targetNamespace = "")
        com.sun.mdm.index.webservice.SystemPerson sysObjBean
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordsByEUIDRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordsByEUIDResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordsByEUID/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordsByEUID/Fault/UserException")})
    @RequestWrapper(localName = "getSystemRecordsByEUID", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSystemRecordsByEUID")
    @WebMethod
    @ResponseWrapper(localName = "getSystemRecordsByEUIDResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSystemRecordsByEUIDResponse")
    public java.util.List<com.sun.mdm.index.webservice.SystemPerson> getSystemRecordsByEUID(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/splitSystemRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/splitSystemRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/splitSystemRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/splitSystemRecord/Fault/UserException")})
    @RequestWrapper(localName = "splitSystemRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.SplitSystemRecord")
    @WebMethod
    @ResponseWrapper(localName = "splitSystemRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.SplitSystemRecordResponse")
    public java.lang.String splitSystemRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getActiveEUIDRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getActiveEUIDResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getActiveEUID/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getActiveEUID/Fault/UserException")})
    @RequestWrapper(localName = "getActiveEUID", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetActiveEUID")
    @WebMethod
    @ResponseWrapper(localName = "getActiveEUIDResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetActiveEUIDResponse")
    public java.lang.String getActiveEUID(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/mergeSystemRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/mergeSystemRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeSystemRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeSystemRecord/Fault/UserException")})
    @RequestWrapper(localName = "mergeSystemRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeSystemRecord")
    @WebMethod
    @ResponseWrapper(localName = "mergeSystemRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeSystemRecordResponse")
    public com.sun.mdm.index.webservice.MergePersonResult mergeSystemRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "sourceLID", targetNamespace = "")
        java.lang.String sourceLID,
        @WebParam(name = "destLID", targetNamespace = "")
        java.lang.String destLID,
        @WebParam(name = "calculateOnly", targetNamespace = "")
        boolean calculateOnly
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/activateEnterpriseRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/activateEnterpriseRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/activateEnterpriseRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/activateEnterpriseRecord/Fault/UserException")})
    @RequestWrapper(localName = "activateEnterpriseRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ActivateEnterpriseRecord")
    @WebMethod
    @ResponseWrapper(localName = "activateEnterpriseRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.ActivateEnterpriseRecordResponse")
    public void activateEnterpriseRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/transferSystemRecordUIDRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/transferSystemRecordUIDResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/transferSystemRecordUID/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/transferSystemRecordUID/Fault/UserException")})
    @RequestWrapper(localName = "transferSystemRecordUID", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.TransferSystemRecordUID")
    @WebMethod
    @ResponseWrapper(localName = "transferSystemRecordUIDResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.TransferSystemRecordUIDResponse")
    public void transferSystemRecordUID(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "destSystemCode", targetNamespace = "")
        java.lang.String destSystemCode,
        @WebParam(name = "destLID", targetNamespace = "")
        java.lang.String destLID,
        @WebParam(name = "UIDType", targetNamespace = "")
        java.lang.String uidType,
        @WebParam(name = "UID", targetNamespace = "")
        java.lang.String uid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getLIDsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getLIDsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getLIDs/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getLIDs/Fault/UserException")})
    @RequestWrapper(localName = "getLIDs", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetLIDs")
    @WebMethod
    @ResponseWrapper(localName = "getLIDsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetLIDsResponse")
    public java.util.List<com.sun.mdm.index.webservice.SystemPersonPK> getLIDs(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/lookupResourceRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/lookupResourceResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupResource/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupResource/Fault/UserException")})
    @RequestWrapper(localName = "lookupResource", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupResource")
    @WebMethod
    @ResponseWrapper(localName = "lookupResourceResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupResourceResponse")
    public byte[] lookupResource(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "resourceName", targetNamespace = "")
        java.lang.String resourceName
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getComparisonRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getComparisonResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getComparison/Fault/ProcessingException")})
    @RequestWrapper(localName = "getComparison", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetComparison")
    @WebMethod
    @ResponseWrapper(localName = "getComparisonResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetComparisonResponse")
    public com.sun.mdm.index.webservice.MatchWeight getComparison(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "comparisonId", targetNamespace = "")
        long comparisonId
    ) throws ProcessingException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/lookupLIDBySUIDRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/lookupLIDBySUIDResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupLIDBySUID/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupLIDBySUID/Fault/UserException")})
    @RequestWrapper(localName = "lookupLIDBySUID", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupLIDBySUID")
    @WebMethod
    @ResponseWrapper(localName = "lookupLIDBySUIDResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupLIDBySUIDResponse")
    public com.sun.mdm.index.webservice.SystemPersonPK lookupLIDBySUID(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "UIDType", targetNamespace = "")
        java.lang.String uidType,
        @WebParam(name = "UID", targetNamespace = "")
        java.lang.String uid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getLastSysInfoLogEntryRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getLastSysInfoLogEntryResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getLastSysInfoLogEntry/Fault/ProcessingException")})
    @RequestWrapper(localName = "getLastSysInfoLogEntry", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetLastSysInfoLogEntry")
    @WebMethod
    @ResponseWrapper(localName = "getLastSysInfoLogEntryResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetLastSysInfoLogEntryResponse")
    public java.lang.String getLastSysInfoLogEntry(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo
    ) throws ProcessingException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordHistoryRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordHistoryResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordHistory/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordHistory/Fault/UserException")})
    @RequestWrapper(localName = "getSystemRecordHistory", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSystemRecordHistory")
    @WebMethod
    @ResponseWrapper(localName = "getSystemRecordHistoryResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSystemRecordHistoryResponse")
    public com.sun.mdm.index.webservice.SystemPersonHistory getSystemRecordHistory(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid,
        @WebParam(name = "transnum", targetNamespace = "")
        java.lang.String transnum
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/lookupObjectDefinitionRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/lookupObjectDefinitionResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupObjectDefinition/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupObjectDefinition/Fault/UserException"), @FaultAction(className = PageException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupObjectDefinition/Fault/PageException")})
    @RequestWrapper(localName = "lookupObjectDefinition", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupObjectDefinition")
    @WebMethod
    @ResponseWrapper(localName = "lookupObjectDefinitionResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupObjectDefinitionResponse")
    public com.sun.mdm.index.webservice.ObjectDefinition lookupObjectDefinition() throws ProcessingException_Exception, UserException_Exception, PageException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecord/Fault/UserException")})
    @RequestWrapper(localName = "getSystemRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSystemRecord")
    @WebMethod
    @ResponseWrapper(localName = "getSystemRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSystemRecordResponse")
    public com.sun.mdm.index.webservice.SystemPerson getSystemRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecordWithOverwritesRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecordWithOverwritesResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecordWithOverwrites/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeEnterpriseRecordWithOverwrites/Fault/UserException")})
    @RequestWrapper(localName = "mergeEnterpriseRecordWithOverwrites", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeEnterpriseRecordWithOverwrites")
    @WebMethod
    @ResponseWrapper(localName = "mergeEnterpriseRecordWithOverwritesResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeEnterpriseRecordWithOverwritesResponse")
    public com.sun.mdm.index.webservice.MergePersonResult mergeEnterpriseRecordWithOverwrites(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "fromEUID", targetNamespace = "")
        java.lang.String fromEUID,
        @WebParam(name = "toEUID", targetNamespace = "")
        java.lang.String toEUID,
        @WebParam(name = "calculateOnly", targetNamespace = "")
        boolean calculateOnly,
        @WebParam(name = "setSourceSystemStatusToMerged", targetNamespace = "")
        boolean setSourceSystemStatusToMerged,
        @WebParam(name = "overwrite", targetNamespace = "")
        java.util.List<com.sun.mdm.index.webservice.SbrOverWriteBean> overwrite
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/recalculateMatchRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/recalculateMatchResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/recalculateMatch/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/recalculateMatch/Fault/UserException")})
    @RequestWrapper(localName = "recalculateMatch", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.RecalculateMatch")
    @WebMethod
    @ResponseWrapper(localName = "recalculateMatchResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.RecalculateMatchResponse")
    public com.sun.mdm.index.webservice.MatchColResult recalculateMatch(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordStatusRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordStatusResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordStatus/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getSystemRecordStatus/Fault/UserException")})
    @RequestWrapper(localName = "getSystemRecordStatus", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSystemRecordStatus")
    @WebMethod
    @ResponseWrapper(localName = "getSystemRecordStatusResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetSystemRecordStatusResponse")
    public java.lang.String getSystemRecordStatus(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/lookupLIDsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/lookupLIDsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupLIDs/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupLIDs/Fault/UserException")})
    @RequestWrapper(localName = "lookupLIDs", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupLIDs")
    @WebMethod
    @ResponseWrapper(localName = "lookupLIDsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupLIDsResponse")
    public java.util.List<com.sun.mdm.index.webservice.SystemPersonPK> lookupLIDs(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "sourceSystemCode", targetNamespace = "")
        java.lang.String sourceSystemCode,
        @WebParam(name = "sourceLID", targetNamespace = "")
        java.lang.String sourceLID,
        @WebParam(name = "destSystemCode", targetNamespace = "")
        java.lang.String destSystemCode,
        @WebParam(name = "status", targetNamespace = "")
        java.lang.String status
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/undoAssumedMatchRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/undoAssumedMatchResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/undoAssumedMatch/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/undoAssumedMatch/Fault/UserException")})
    @RequestWrapper(localName = "undoAssumedMatch", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UndoAssumedMatch")
    @WebMethod
    @ResponseWrapper(localName = "undoAssumedMatchResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UndoAssumedMatchResponse")
    public java.lang.String undoAssumedMatch(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "assumedMatchId", targetNamespace = "")
        java.lang.String assumedMatchId
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/updateSystemRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/updateSystemRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/updateSystemRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/updateSystemRecord/Fault/UserException")})
    @RequestWrapper(localName = "updateSystemRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UpdateSystemRecord")
    @WebMethod
    @ResponseWrapper(localName = "updateSystemRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UpdateSystemRecordResponse")
    public void updateSystemRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "sysObjBean", targetNamespace = "")
        com.sun.mdm.index.webservice.SystemPerson sysObjBean
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/assignRefObjectNodeRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/assignRefObjectNodeResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/assignRefObjectNode/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/assignRefObjectNode/Fault/UserException")})
    @RequestWrapper(localName = "assignRefObjectNode", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.AssignRefObjectNode")
    @WebMethod
    @ResponseWrapper(localName = "assignRefObjectNodeResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.AssignRefObjectNodeResponse")
    public void assignRefObjectNode(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid,
        @WebParam(name = "objectType", targetNamespace = "")
        java.lang.String objectType,
        @WebParam(name = "sysObjBean", targetNamespace = "")
        com.sun.mdm.index.webservice.SystemPerson sysObjBean
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/transferSystemRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/transferSystemRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/transferSystemRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/transferSystemRecord/Fault/UserException")})
    @RequestWrapper(localName = "transferSystemRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.TransferSystemRecord")
    @WebMethod
    @ResponseWrapper(localName = "transferSystemRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.TransferSystemRecordResponse")
    public void transferSystemRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "toEUID", targetNamespace = "")
        java.lang.String toEUID,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getEUIDRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getEUIDResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEUID/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEUID/Fault/UserException")})
    @RequestWrapper(localName = "getEUID", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEUID")
    @WebMethod
    @ResponseWrapper(localName = "getEUIDResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEUIDResponse")
    public java.lang.String getEUID(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/deactivateSystemRecordRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/deactivateSystemRecordResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/deactivateSystemRecord/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/deactivateSystemRecord/Fault/UserException")})
    @RequestWrapper(localName = "deactivateSystemRecord", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.DeactivateSystemRecord")
    @WebMethod
    @ResponseWrapper(localName = "deactivateSystemRecordResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.DeactivateSystemRecordResponse")
    public void deactivateSystemRecord(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getLIDsByStatusRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getLIDsByStatusResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getLIDsByStatus/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getLIDsByStatus/Fault/UserException")})
    @RequestWrapper(localName = "getLIDsByStatus", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetLIDsByStatus")
    @WebMethod
    @ResponseWrapper(localName = "getLIDsByStatusResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetLIDsByStatusResponse")
    public java.util.List<com.sun.mdm.index.webservice.SystemPersonPK> getLIDsByStatus(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid,
        @WebParam(name = "status", targetNamespace = "")
        java.lang.String status
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getMergedEUIDsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getMergedEUIDsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getMergedEUIDs/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getMergedEUIDs/Fault/UserException")})
    @RequestWrapper(localName = "getMergedEUIDs", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetMergedEUIDs")
    @WebMethod
    @ResponseWrapper(localName = "getMergedEUIDsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetMergedEUIDsResponse")
    public java.util.List<java.lang.String> getMergedEUIDs(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;

    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/unresolvePotentialDuplicateRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/unresolvePotentialDuplicateResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/unresolvePotentialDuplicate/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/unresolvePotentialDuplicate/Fault/UserException")})
    @RequestWrapper(localName = "unresolvePotentialDuplicate", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UnresolvePotentialDuplicate")
    @WebMethod
    @ResponseWrapper(localName = "unresolvePotentialDuplicateResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.UnresolvePotentialDuplicateResponse")
    public void unresolvePotentialDuplicate(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "potentialDuplicateId", targetNamespace = "")
        java.lang.String potentialDuplicateId
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordByLIDRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordByLIDResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordByLID/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordByLID/Fault/UserException")})
    @RequestWrapper(localName = "getEnterpriseRecordByLID", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEnterpriseRecordByLID")
    @WebMethod
    @ResponseWrapper(localName = "getEnterpriseRecordByLIDResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEnterpriseRecordByLIDResponse")
    public com.sun.mdm.index.webservice.EnterprisePerson getEnterpriseRecordByLID(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "localid", targetNamespace = "")
        java.lang.String localid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemUIDDefinitionsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemUIDDefinitionsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/lookupSystemUIDDefinitions/Fault/ProcessingException")})
    @RequestWrapper(localName = "lookupSystemUIDDefinitions", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupSystemUIDDefinitions")
    @WebMethod
    @ResponseWrapper(localName = "lookupSystemUIDDefinitionsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.LookupSystemUIDDefinitionsResponse")
    public java.util.List<com.sun.mdm.index.webservice.SystemUIDDefinition> lookupSystemUIDDefinitions() throws ProcessingException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordsRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecordsResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecords/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getEnterpriseRecords/Fault/UserException")})
    @RequestWrapper(localName = "getEnterpriseRecords", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEnterpriseRecords")
    @WebMethod
    @ResponseWrapper(localName = "getEnterpriseRecordsResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetEnterpriseRecordsResponse")
    public java.util.List<com.sun.mdm.index.webservice.EnterprisePerson> getEnterpriseRecords(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euids", targetNamespace = "")
        java.util.List<java.lang.String> euids,
        @WebParam(name = "allowMergedEuid", targetNamespace = "")
        boolean allowMergedEuid
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/mergeSystemRecordWithImageRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/mergeSystemRecordWithImageResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeSystemRecordWithImage/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/mergeSystemRecordWithImage/Fault/UserException")})
    @RequestWrapper(localName = "mergeSystemRecordWithImage", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeSystemRecordWithImage")
    @WebMethod
    @ResponseWrapper(localName = "mergeSystemRecordWithImageResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.MergeSystemRecordWithImageResponse")
    public com.sun.mdm.index.webservice.MergePersonResult mergeSystemRecordWithImage(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "systemCode", targetNamespace = "")
        java.lang.String systemCode,
        @WebParam(name = "sourceLID", targetNamespace = "")
        java.lang.String sourceLID,
        @WebParam(name = "destLID", targetNamespace = "")
        java.lang.String destLID,
        @WebParam(name = "destImage", targetNamespace = "")
        com.sun.mdm.index.webservice.PersonObject destImage,
        @WebParam(name = "calculateOnly", targetNamespace = "")
        boolean calculateOnly
    ) throws ProcessingException_Exception, UserException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @Action(input = "http://webservice.index.mdm.sun.com/PersonEJB/getRevisionNumberRequest", output = "http://webservice.index.mdm.sun.com/PersonEJB/getRevisionNumberResponse", fault = {@FaultAction(className = ProcessingException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getRevisionNumber/Fault/ProcessingException"), @FaultAction(className = UserException_Exception.class, value = "http://webservice.index.mdm.sun.com/PersonEJB/getRevisionNumber/Fault/UserException")})
    @RequestWrapper(localName = "getRevisionNumber", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetRevisionNumber")
    @WebMethod
    @ResponseWrapper(localName = "getRevisionNumberResponse", targetNamespace = "http://webservice.index.mdm.sun.com/", className = "com.sun.mdm.index.webservice.GetRevisionNumberResponse")
    public java.lang.Integer getRevisionNumber(
        @WebParam(name = "callerInfo", targetNamespace = "")
        com.sun.mdm.index.webservice.CallerInfo callerInfo,
        @WebParam(name = "euid", targetNamespace = "")
        java.lang.String euid
    ) throws ProcessingException_Exception, UserException_Exception;
}
